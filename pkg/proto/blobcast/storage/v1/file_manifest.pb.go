// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: blobcast/storage/v1/file_manifest.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileManifest struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ManifestVersion      string                 `protobuf:"bytes,1,opt,name=manifest_version,json=manifestVersion,proto3" json:"manifest_version,omitempty"`
	CompressionAlgorithm CompressionAlgorithm   `protobuf:"varint,2,opt,name=compression_algorithm,json=compressionAlgorithm,proto3,enum=blobcast.storage.v1.CompressionAlgorithm" json:"compression_algorithm,omitempty"`
	Chunks               []*ChunkReference      `protobuf:"bytes,3,rep,name=chunks,proto3" json:"chunks,omitempty"`
	FileName             string                 `protobuf:"bytes,4,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	MimeType             string                 `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	FileSize             uint64                 `protobuf:"varint,6,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	FileHash             []byte                 `protobuf:"bytes,7,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FileManifest) Reset() {
	*x = FileManifest{}
	mi := &file_blobcast_storage_v1_file_manifest_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileManifest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileManifest) ProtoMessage() {}

func (x *FileManifest) ProtoReflect() protoreflect.Message {
	mi := &file_blobcast_storage_v1_file_manifest_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileManifest.ProtoReflect.Descriptor instead.
func (*FileManifest) Descriptor() ([]byte, []int) {
	return file_blobcast_storage_v1_file_manifest_proto_rawDescGZIP(), []int{0}
}

func (x *FileManifest) GetManifestVersion() string {
	if x != nil {
		return x.ManifestVersion
	}
	return ""
}

func (x *FileManifest) GetCompressionAlgorithm() CompressionAlgorithm {
	if x != nil {
		return x.CompressionAlgorithm
	}
	return CompressionAlgorithm_COMPRESSION_ALGORITHM_UNSPECIFIED
}

func (x *FileManifest) GetChunks() []*ChunkReference {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *FileManifest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileManifest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *FileManifest) GetFileSize() uint64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileManifest) GetFileHash() []byte {
	if x != nil {
		return x.FileHash
	}
	return nil
}

var File_blobcast_storage_v1_file_manifest_proto protoreflect.FileDescriptor

const file_blobcast_storage_v1_file_manifest_proto_rawDesc = "" +
	"\n" +
	"'blobcast/storage/v1/file_manifest.proto\x12\x13blobcast.storage.v1\x1a)blobcast/storage/v1/chunk_reference.proto\x1a/blobcast/storage/v1/compression_algorithm.proto\"\xca\x02\n" +
	"\fFileManifest\x12)\n" +
	"\x10manifest_version\x18\x01 \x01(\tR\x0fmanifestVersion\x12^\n" +
	"\x15compression_algorithm\x18\x02 \x01(\x0e2).blobcast.storage.v1.CompressionAlgorithmR\x14compressionAlgorithm\x12;\n" +
	"\x06chunks\x18\x03 \x03(\v2#.blobcast.storage.v1.ChunkReferenceR\x06chunks\x12\x1b\n" +
	"\tfile_name\x18\x04 \x01(\tR\bfileName\x12\x1b\n" +
	"\tmime_type\x18\x05 \x01(\tR\bmimeType\x12\x1b\n" +
	"\tfile_size\x18\x06 \x01(\x04R\bfileSize\x12\x1b\n" +
	"\tfile_hash\x18\a \x01(\fR\bfileHashB=Z;github.com/forma-dev/blobcast/pkg/proto/blobcast/storage/v1b\x06proto3"

var (
	file_blobcast_storage_v1_file_manifest_proto_rawDescOnce sync.Once
	file_blobcast_storage_v1_file_manifest_proto_rawDescData []byte
)

func file_blobcast_storage_v1_file_manifest_proto_rawDescGZIP() []byte {
	file_blobcast_storage_v1_file_manifest_proto_rawDescOnce.Do(func() {
		file_blobcast_storage_v1_file_manifest_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_blobcast_storage_v1_file_manifest_proto_rawDesc), len(file_blobcast_storage_v1_file_manifest_proto_rawDesc)))
	})
	return file_blobcast_storage_v1_file_manifest_proto_rawDescData
}

var file_blobcast_storage_v1_file_manifest_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_blobcast_storage_v1_file_manifest_proto_goTypes = []any{
	(*FileManifest)(nil),      // 0: blobcast.storage.v1.FileManifest
	(CompressionAlgorithm)(0), // 1: blobcast.storage.v1.CompressionAlgorithm
	(*ChunkReference)(nil),    // 2: blobcast.storage.v1.ChunkReference
}
var file_blobcast_storage_v1_file_manifest_proto_depIdxs = []int32{
	1, // 0: blobcast.storage.v1.FileManifest.compression_algorithm:type_name -> blobcast.storage.v1.CompressionAlgorithm
	2, // 1: blobcast.storage.v1.FileManifest.chunks:type_name -> blobcast.storage.v1.ChunkReference
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_blobcast_storage_v1_file_manifest_proto_init() }
func file_blobcast_storage_v1_file_manifest_proto_init() {
	if File_blobcast_storage_v1_file_manifest_proto != nil {
		return
	}
	file_blobcast_storage_v1_chunk_reference_proto_init()
	file_blobcast_storage_v1_compression_algorithm_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_blobcast_storage_v1_file_manifest_proto_rawDesc), len(file_blobcast_storage_v1_file_manifest_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blobcast_storage_v1_file_manifest_proto_goTypes,
		DependencyIndexes: file_blobcast_storage_v1_file_manifest_proto_depIdxs,
		MessageInfos:      file_blobcast_storage_v1_file_manifest_proto_msgTypes,
	}.Build()
	File_blobcast_storage_v1_file_manifest_proto = out.File
	file_blobcast_storage_v1_file_manifest_proto_goTypes = nil
	file_blobcast_storage_v1_file_manifest_proto_depIdxs = nil
}
